# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy PHP app to Azure Web App - VocabularyBuilding

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Node.js dependencies
        run: |
          rm -rf node_modules
          npm ci

      - name: Build React app
        run: |
          npm run build

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r
  
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: release.zip

      - name: Run migrations
        run: php artisan migrate --force
  
      - name: Seed database
        run: php artisan db:seed --force
  
      - name: Set up environment variables
        run: |
          echo "APP_NAME=${{ secrets.APP_NAME }}" >> .env
          echo "APP_ENV=${{ secrets.APP_ENV }}" >> .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "APP_DEBUG=${{ secrets.APP_DEBUG }}" >> .env
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env
          echo "LOG_CHANNEL=${{ secrets.LOG_CHANNEL }}" >> .env
          echo "LOG_LEVEL=${{ secrets.LOG_LEVEL }}" >> .env
          echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "SESSION_DRIVER=${{ secrets.SESSION_DRIVER }}" >> .env
          echo "SESSION_LIFETIME=${{ secrets.SESSION_LIFETIME }}" >> .env
          echo "CACHE_STORE=${{ secrets.CACHE_STORE }}" >> .env
          echo "CACHE_PREFIX=${{ secrets.CACHE_PREFIX }}" >> .env

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: php-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_EFD747454B3F4FA1A7F4B56730782DDB }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C3C0316F42DA4B9190486306EE9A56EC }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_74A320CC9E7942818F953D1BCEC74478 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'VocabularyBuilding'
          slot-name: 'Production'
          package: .
          